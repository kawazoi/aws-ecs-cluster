name: DeployStg

on:
  pull_request:
    branches:
      - staging
  push:
    branches:
      - staging

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Requirements
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: AWS CDK GitHub Actions - Synth
      uses: youyo/aws-cdk-github-actions@v1.1.10
      with:
        cdk_subcommand: 'synth'
        cdk_stack: 'nlp-ecs-cluster-stg'
        actions_comment: false
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'
    - name: AWS CDK GitHub Actions - Diff
      id: diff
      uses: youyo/aws-cdk-github-actions@v1.1.10
      with:
        cdk_subcommand: 'diff'
        cdk_stack: 'nlp-ecs-cluster-stg'
        actions_comment: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'
    - name: AWS CDK - Deploy to Staging
      if: github.event_name == 'push'
      uses: youyo/aws-cdk-github-actions@v1.1.10
      with:
        cdk_subcommand: 'deploy'
        cdk_stack: 'nlp-ecs-cluster-stg'
        actions_comment: false
        args: '--require-approval never'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'
    # https://github.com/marketplace/actions/action-slack
    - name: Slack message
      uses: 8398a7/action-slack@v2
      with:
        status: ${{ job.status }}
        author_name: GitHubActions
      env:
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GIT_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NLP_ALERTS }}
      if: steps.diff.outputs.status_code == 1
    - name: Open Issue
      if: failure() && github.event_name == 'pull_request'
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/issues \
        --header 'authorization: Bearer ${{ secrets.CUSTOM_GIT_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "title": "Automated issue for commit: ${{ github.sha }}",
          "body": "This issue was automatically created by GitHub Actions workflow **${{ github.workflow}}**. \n\n The commit hash was: _${{ github.sha }}_.",
          "assignees": ["${{ github.event.pull_request.user.login }}"]
          }'
