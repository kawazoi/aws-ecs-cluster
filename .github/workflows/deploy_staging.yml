name: DeployStaging

on:
  pull_request:
    branch: [staging, master]
  push:
    branch: [staging, master]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Requirements
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: aws-cdk-action
      uses: kawazoi/aws-cdk-action@1.0.0
      with:
        args: synth
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # - name: Run Semantic Release
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.CUSTOM_GIT_TOKEN }}
    # - name: Open Issue
    #   if: failure() && github.event_name == 'pull_request'
    #   run: |
    #     curl --request POST \
    #     --url https://api.github.com/repos/${{ github.repository }}/issues \
    #     --header 'authorization: Bearer ${{ secrets.CUSTOM_GIT_TOKEN }}' \
    #     --header 'content-type: application/json' \
    #     --data '{
    #       "title": "Automated issue for commit: ${{ github.sha }}",
    #       "body": "This issue was automatically created by GitHub Actions workflow **${{ github.workflow}}**. \n\n The commit hash was: _${{ github.sha }}_.",
    #       "assignees": ["${{ github.event.pull_request.user.login }}"]
    #       }'
